/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.DistributionDev;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.FeedbackRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 意见反馈表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Feedback extends TableImpl<FeedbackRecord> {

    private static final long serialVersionUID = 1153471799;

    /**
     * The reference instance of <code>distribution_dev.feedback</code>
     */
    public static final Feedback FEEDBACK = new Feedback();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FeedbackRecord> getRecordType() {
        return FeedbackRecord.class;
    }

    /**
     * The column <code>distribution_dev.feedback.id</code>.
     */
    public final TableField<FeedbackRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>distribution_dev.feedback.member_id</code>. 会员id
     */
    public final TableField<FeedbackRecord, String> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "会员id");

    /**
     * The column <code>distribution_dev.feedback.title</code>. 反馈标题
     */
    public final TableField<FeedbackRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "反馈标题");

    /**
     * The column <code>distribution_dev.feedback.content</code>. 反馈内容
     */
    public final TableField<FeedbackRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "反馈内容");

    /**
     * The column <code>distribution_dev.feedback.add_time</code>.
     */
    public final TableField<FeedbackRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>distribution_dev.feedback.is_delete</code>. 是否显示 0否 1是
     */
    public final TableField<FeedbackRecord, Integer> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "是否显示 0否 1是");

    /**
     * Create a <code>distribution_dev.feedback</code> table reference
     */
    public Feedback() {
        this(DSL.name("feedback"), null);
    }

    /**
     * Create an aliased <code>distribution_dev.feedback</code> table reference
     */
    public Feedback(String alias) {
        this(DSL.name(alias), FEEDBACK);
    }

    /**
     * Create an aliased <code>distribution_dev.feedback</code> table reference
     */
    public Feedback(Name alias) {
        this(alias, FEEDBACK);
    }

    private Feedback(Name alias, Table<FeedbackRecord> aliased) {
        this(alias, aliased, null);
    }

    private Feedback(Name alias, Table<FeedbackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "意见反馈表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DistributionDev.DISTRIBUTION_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FEEDBACK_FEEDBACK_ID_INDEX, Indexes.FEEDBACK_FEEDBACK_MEMBER_ID_INDEX, Indexes.FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FeedbackRecord, Long> getIdentity() {
        return Keys.IDENTITY_FEEDBACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FeedbackRecord> getPrimaryKey() {
        return Keys.KEY_FEEDBACK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FeedbackRecord>> getKeys() {
        return Arrays.<UniqueKey<FeedbackRecord>>asList(Keys.KEY_FEEDBACK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Feedback as(String alias) {
        return new Feedback(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Feedback as(Name alias) {
        return new Feedback(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Feedback rename(String name) {
        return new Feedback(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Feedback rename(Name name) {
        return new Feedback(name, null);
    }
}
