/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.DistributionDev;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.DisFansRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 锁粉表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisFans extends TableImpl<DisFansRecord> {

    private static final long serialVersionUID = -2037353434;

    /**
     * The reference instance of <code>distribution_dev.dis_fans</code>
     */
    public static final DisFans DIS_FANS = new DisFans();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DisFansRecord> getRecordType() {
        return DisFansRecord.class;
    }

    /**
     * The column <code>distribution_dev.dis_fans.id</code>.
     */
    public final TableField<DisFansRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution_dev.dis_fans.member_id</code>. 关联的推荐人ID
     */
    public final TableField<DisFansRecord, String> MEMBER_ID = createField("member_id", org.jooq.impl.SQLDataType.VARCHAR(32), this, "关联的推荐人ID");

    /**
     * The column <code>distribution_dev.dis_fans.wechat_id</code>. 微信ID
     */
    public final TableField<DisFansRecord, String> WECHAT_ID = createField("wechat_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "微信ID");

    /**
     * The column <code>distribution_dev.dis_fans.wechat_img</code>. 微信头像
     */
    public final TableField<DisFansRecord, String> WECHAT_IMG = createField("wechat_img", org.jooq.impl.SQLDataType.VARCHAR(250), this, "微信头像");

    /**
     * The column <code>distribution_dev.dis_fans.wechat_nickname</code>. 微信昵称
     */
    public final TableField<DisFansRecord, String> WECHAT_NICKNAME = createField("wechat_nickname", org.jooq.impl.SQLDataType.VARCHAR(200), this, "微信昵称");

    /**
     * The column <code>distribution_dev.dis_fans.worker_id</code>. 工号
     */
    public final TableField<DisFansRecord, Long> WORKER_ID = createField("worker_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "工号");

    /**
     * Create a <code>distribution_dev.dis_fans</code> table reference
     */
    public DisFans() {
        this(DSL.name("dis_fans"), null);
    }

    /**
     * Create an aliased <code>distribution_dev.dis_fans</code> table reference
     */
    public DisFans(String alias) {
        this(DSL.name(alias), DIS_FANS);
    }

    /**
     * Create an aliased <code>distribution_dev.dis_fans</code> table reference
     */
    public DisFans(Name alias) {
        this(alias, DIS_FANS);
    }

    private DisFans(Name alias, Table<DisFansRecord> aliased) {
        this(alias, aliased, null);
    }

    private DisFans(Name alias, Table<DisFansRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "锁粉表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DistributionDev.DISTRIBUTION_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DIS_FANS_DIS_FANS_ID_UINDEX, Indexes.DIS_FANS_DIS_FANS__INDEX_1, Indexes.DIS_FANS_DIS_FANS__INDEX_OPENID, Indexes.DIS_FANS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DisFansRecord> getPrimaryKey() {
        return Keys.KEY_DIS_FANS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DisFansRecord>> getKeys() {
        return Arrays.<UniqueKey<DisFansRecord>>asList(Keys.KEY_DIS_FANS_PRIMARY, Keys.KEY_DIS_FANS_DIS_FANS_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DisFans as(String alias) {
        return new DisFans(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DisFans as(Name alias) {
        return new DisFans(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DisFans rename(String name) {
        return new DisFans(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DisFans rename(Name name) {
        return new DisFans(name, null);
    }
}
