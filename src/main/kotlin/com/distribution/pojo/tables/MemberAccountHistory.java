/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.DistributionDev;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.MemberAccountHistoryRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户金额变化表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberAccountHistory extends TableImpl<MemberAccountHistoryRecord> {

    private static final long serialVersionUID = 1548849918;

    /**
     * The reference instance of <code>distribution_dev.member_account_history</code>
     */
    public static final MemberAccountHistory MEMBER_ACCOUNT_HISTORY = new MemberAccountHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemberAccountHistoryRecord> getRecordType() {
        return MemberAccountHistoryRecord.class;
    }

    /**
     * The column <code>distribution_dev.member_account_history.id</code>.
     */
    public final TableField<MemberAccountHistoryRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution_dev.member_account_history.his_type</code>. 收入类型，0:支出,1:收入
     */
    public final TableField<MemberAccountHistoryRecord, Integer> HIS_TYPE = createField("his_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "收入类型，0:支出,1:收入");

    /**
     * The column <code>distribution_dev.member_account_history.account_id</code>. 关联的订单ID
     */
    public final TableField<MemberAccountHistoryRecord, String> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "关联的订单ID");

    /**
     * The column <code>distribution_dev.member_account_history.his_amount</code>.
     */
    public final TableField<MemberAccountHistoryRecord, BigDecimal> HIS_AMOUNT = createField("his_amount", org.jooq.impl.SQLDataType.DECIMAL(12, 2), this, "");

    /**
     * The column <code>distribution_dev.member_account_history.his_note</code>.
     */
    public final TableField<MemberAccountHistoryRecord, String> HIS_NOTE = createField("his_note", org.jooq.impl.SQLDataType.VARCHAR(800), this, "");

    /**
     * The column <code>distribution_dev.member_account_history.is_delete</code>.
     */
    public final TableField<MemberAccountHistoryRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>distribution_dev.member_account_history.add_time</code>.
     */
    public final TableField<MemberAccountHistoryRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>distribution_dev.member_account_history.update_time</code>.
     */
    public final TableField<MemberAccountHistoryRecord, String> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * Create a <code>distribution_dev.member_account_history</code> table reference
     */
    public MemberAccountHistory() {
        this(DSL.name("member_account_history"), null);
    }

    /**
     * Create an aliased <code>distribution_dev.member_account_history</code> table reference
     */
    public MemberAccountHistory(String alias) {
        this(DSL.name(alias), MEMBER_ACCOUNT_HISTORY);
    }

    /**
     * Create an aliased <code>distribution_dev.member_account_history</code> table reference
     */
    public MemberAccountHistory(Name alias) {
        this(alias, MEMBER_ACCOUNT_HISTORY);
    }

    private MemberAccountHistory(Name alias, Table<MemberAccountHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemberAccountHistory(Name alias, Table<MemberAccountHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户金额变化表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DistributionDev.DISTRIBUTION_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMBER_ACCOUNT_HISTORY_MEMBER_ACCOUNT_HISTORY_INDEX_1, Indexes.MEMBER_ACCOUNT_HISTORY_MEMBER_AMOUNT_HISTROY_ID_UINDEX, Indexes.MEMBER_ACCOUNT_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemberAccountHistoryRecord> getPrimaryKey() {
        return Keys.KEY_MEMBER_ACCOUNT_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemberAccountHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<MemberAccountHistoryRecord>>asList(Keys.KEY_MEMBER_ACCOUNT_HISTORY_PRIMARY, Keys.KEY_MEMBER_ACCOUNT_HISTORY_MEMBER_AMOUNT_HISTROY_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberAccountHistory as(String alias) {
        return new MemberAccountHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemberAccountHistory as(Name alias) {
        return new MemberAccountHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberAccountHistory rename(String name) {
        return new MemberAccountHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemberAccountHistory rename(Name name) {
        return new MemberAccountHistory(name, null);
    }
}
