/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.DistributionDev;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.TbUserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * ??
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbUser extends TableImpl<TbUserRecord> {

    private static final long serialVersionUID = 1049108101;

    /**
     * The reference instance of <code>distribution_dev.tb_user</code>
     */
    public static final TbUser TB_USER = new TbUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbUserRecord> getRecordType() {
        return TbUserRecord.class;
    }

    /**
     * The column <code>distribution_dev.tb_user.user_id</code>.
     */
    public final TableField<TbUserRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution_dev.tb_user.username</code>. ???

     */
    public final TableField<TbUserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "???\n");

    /**
     * The column <code>distribution_dev.tb_user.mobile</code>. ???
     */
    public final TableField<TbUserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "???");

    /**
     * The column <code>distribution_dev.tb_user.password</code>. ??
     */
    public final TableField<TbUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(64), this, "??");

    /**
     * The column <code>distribution_dev.tb_user.create_time</code>. ????
     */
    public final TableField<TbUserRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "????");

    /**
     * Create a <code>distribution_dev.tb_user</code> table reference
     */
    public TbUser() {
        this(DSL.name("tb_user"), null);
    }

    /**
     * Create an aliased <code>distribution_dev.tb_user</code> table reference
     */
    public TbUser(String alias) {
        this(DSL.name(alias), TB_USER);
    }

    /**
     * Create an aliased <code>distribution_dev.tb_user</code> table reference
     */
    public TbUser(Name alias) {
        this(alias, TB_USER);
    }

    private TbUser(Name alias, Table<TbUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbUser(Name alias, Table<TbUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "??");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DistributionDev.DISTRIBUTION_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TB_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TbUserRecord> getPrimaryKey() {
        return Keys.KEY_TB_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TbUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TbUserRecord>>asList(Keys.KEY_TB_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbUser as(String alias) {
        return new TbUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TbUser as(Name alias) {
        return new TbUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbUser rename(String name) {
        return new TbUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbUser rename(Name name) {
        return new TbUser(name, null);
    }
}
