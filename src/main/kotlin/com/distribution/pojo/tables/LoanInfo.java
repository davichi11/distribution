/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.DistributionDev;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.LoanInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LoanInfo extends TableImpl<LoanInfoRecord> {

    private static final long serialVersionUID = -1684556263;

    /**
     * The reference instance of <code>distribution_dev.loan_info</code>
     */
    public static final LoanInfo LOAN_INFO = new LoanInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LoanInfoRecord> getRecordType() {
        return LoanInfoRecord.class;
    }

    /**
     * The column <code>distribution_dev.loan_info.id</code>.
     */
    public final TableField<LoanInfoRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution_dev.loan_info.loan_name</code>. 贷款产品名称
     */
    public final TableField<LoanInfoRecord, String> LOAN_NAME = createField("loan_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "贷款产品名称");

    /**
     * The column <code>distribution_dev.loan_info.loan_url</code>. 产品链接
     */
    public final TableField<LoanInfoRecord, String> LOAN_URL = createField("loan_url", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "产品链接");

    /**
     * The column <code>distribution_dev.loan_info.loan_img</code>.
     */
    public final TableField<LoanInfoRecord, String> LOAN_IMG = createField("loan_img", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>distribution_dev.loan_info.add_time</code>.
     */
    public final TableField<LoanInfoRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>distribution_dev.loan_info.update_time</code>.
     */
    public final TableField<LoanInfoRecord, String> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>distribution_dev.loan_info.is_delete</code>. 是否启用 0否 1是
     */
    public final TableField<LoanInfoRecord, Integer> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "是否启用 0否 1是");

    /**
     * The column <code>distribution_dev.loan_info.remark</code>.
     */
    public final TableField<LoanInfoRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * Create a <code>distribution_dev.loan_info</code> table reference
     */
    public LoanInfo() {
        this(DSL.name("loan_info"), null);
    }

    /**
     * Create an aliased <code>distribution_dev.loan_info</code> table reference
     */
    public LoanInfo(String alias) {
        this(DSL.name(alias), LOAN_INFO);
    }

    /**
     * Create an aliased <code>distribution_dev.loan_info</code> table reference
     */
    public LoanInfo(Name alias) {
        this(alias, LOAN_INFO);
    }

    private LoanInfo(Name alias, Table<LoanInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private LoanInfo(Name alias, Table<LoanInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DistributionDev.DISTRIBUTION_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LOAN_INFO_LOAN_INFO_ID_UINDEX, Indexes.LOAN_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LoanInfoRecord> getPrimaryKey() {
        return Keys.KEY_LOAN_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LoanInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<LoanInfoRecord>>asList(Keys.KEY_LOAN_INFO_PRIMARY, Keys.KEY_LOAN_INFO_LOAN_INFO_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoanInfo as(String alias) {
        return new LoanInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LoanInfo as(Name alias) {
        return new LoanInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LoanInfo rename(String name) {
        return new LoanInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LoanInfo rename(Name name) {
        return new LoanInfo(name, null);
    }
}
