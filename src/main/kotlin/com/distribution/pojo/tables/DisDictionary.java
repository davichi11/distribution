/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.DistributionDev;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.DisDictionaryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DisDictionary extends TableImpl<DisDictionaryRecord> {

    private static final long serialVersionUID = -1578170429;

    /**
     * The reference instance of <code>distribution_dev.dis_dictionary</code>
     */
    public static final DisDictionary DIS_DICTIONARY = new DisDictionary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DisDictionaryRecord> getRecordType() {
        return DisDictionaryRecord.class;
    }

    /**
     * The column <code>distribution_dev.dis_dictionary.id</code>.
     */
    public final TableField<DisDictionaryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>distribution_dev.dis_dictionary.dis_code</code>. 字典编码
     */
    public final TableField<DisDictionaryRecord, String> DIS_CODE = createField("dis_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "字典编码");

    /**
     * The column <code>distribution_dev.dis_dictionary.dis_type</code>. 字典隐藏字段
     */
    public final TableField<DisDictionaryRecord, String> DIS_TYPE = createField("dis_type", org.jooq.impl.SQLDataType.VARCHAR(100), this, "字典隐藏字段");

    /**
     * The column <code>distribution_dev.dis_dictionary.dis_value</code>. 字典值，为前台显示用
     */
    public final TableField<DisDictionaryRecord, String> DIS_VALUE = createField("dis_value", org.jooq.impl.SQLDataType.VARCHAR(100), this, "字典值，为前台显示用");

    /**
     * The column <code>distribution_dev.dis_dictionary.dis_sort</code>. 排序
     */
    public final TableField<DisDictionaryRecord, Integer> DIS_SORT = createField("dis_sort", org.jooq.impl.SQLDataType.INTEGER, this, "排序");

    /**
     * The column <code>distribution_dev.dis_dictionary.dis_sys_id</code>.
     */
    public final TableField<DisDictionaryRecord, String> DIS_SYS_ID = createField("dis_sys_id", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>distribution_dev.dis_dictionary.is_delete</code>.
     */
    public final TableField<DisDictionaryRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>distribution_dev.dis_dictionary.add_time</code>.
     */
    public final TableField<DisDictionaryRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>distribution_dev.dis_dictionary.update_time</code>.
     */
    public final TableField<DisDictionaryRecord, String> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * Create a <code>distribution_dev.dis_dictionary</code> table reference
     */
    public DisDictionary() {
        this(DSL.name("dis_dictionary"), null);
    }

    /**
     * Create an aliased <code>distribution_dev.dis_dictionary</code> table reference
     */
    public DisDictionary(String alias) {
        this(DSL.name(alias), DIS_DICTIONARY);
    }

    /**
     * Create an aliased <code>distribution_dev.dis_dictionary</code> table reference
     */
    public DisDictionary(Name alias) {
        this(alias, DIS_DICTIONARY);
    }

    private DisDictionary(Name alias, Table<DisDictionaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private DisDictionary(Name alias, Table<DisDictionaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "字典表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DistributionDev.DISTRIBUTION_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DIS_DICTIONARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DisDictionaryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DIS_DICTIONARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DisDictionaryRecord> getPrimaryKey() {
        return Keys.KEY_DIS_DICTIONARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DisDictionaryRecord>> getKeys() {
        return Arrays.<UniqueKey<DisDictionaryRecord>>asList(Keys.KEY_DIS_DICTIONARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DisDictionary as(String alias) {
        return new DisDictionary(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DisDictionary as(Name alias) {
        return new DisDictionary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DisDictionary rename(String name) {
        return new DisDictionary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DisDictionary rename(Name name) {
        return new DisDictionary(name, null);
    }
}
