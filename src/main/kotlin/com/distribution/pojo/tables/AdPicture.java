/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.Distribution;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.AdPictureRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 轮播图
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdPicture extends TableImpl<AdPictureRecord> {

    private static final long serialVersionUID = 1033956408;

    /**
     * The reference instance of <code>distribution.ad_picture</code>
     */
    public static final AdPicture AD_PICTURE = new AdPicture();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdPictureRecord> getRecordType() {
        return AdPictureRecord.class;
    }

    /**
     * The column <code>distribution.ad_picture.id</code>.
     */
    public final TableField<AdPictureRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>distribution.ad_picture.img_url</code>.
     */
    public final TableField<AdPictureRecord, String> IMG_URL = createField("img_url", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>distribution.ad_picture.article_id</code>. 对应的文章编号
     */
    public final TableField<AdPictureRecord, Integer> ARTICLE_ID = createField("article_id", org.jooq.impl.SQLDataType.INTEGER, this, "对应的文章编号");

    /**
     * The column <code>distribution.ad_picture.order_num</code>. 排序
     */
    public final TableField<AdPictureRecord, Integer> ORDER_NUM = createField("order_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>distribution.ad_picture.add_time</code>.
     */
    public final TableField<AdPictureRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>distribution.ad_picture.is_delete</code>. 是否启用 0否 1是
     */
    public final TableField<AdPictureRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.CHAR)), this, "是否启用 0否 1是");

    /**
     * Create a <code>distribution.ad_picture</code> table reference
     */
    public AdPicture() {
        this(DSL.name("ad_picture"), null);
    }

    /**
     * Create an aliased <code>distribution.ad_picture</code> table reference
     */
    public AdPicture(String alias) {
        this(DSL.name(alias), AD_PICTURE);
    }

    /**
     * Create an aliased <code>distribution.ad_picture</code> table reference
     */
    public AdPicture(Name alias) {
        this(alias, AD_PICTURE);
    }

    private AdPicture(Name alias, Table<AdPictureRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdPicture(Name alias, Table<AdPictureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "轮播图");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Distribution.DISTRIBUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.AD_PICTURE_AD_PICTURE_ARTICLE_ID_INDEX, Indexes.AD_PICTURE_AD_PICTURE_ID_INDEX, Indexes.AD_PICTURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AdPictureRecord, Integer> getIdentity() {
        return Keys.IDENTITY_AD_PICTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AdPictureRecord> getPrimaryKey() {
        return Keys.KEY_AD_PICTURE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AdPictureRecord>> getKeys() {
        return Arrays.<UniqueKey<AdPictureRecord>>asList(Keys.KEY_AD_PICTURE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdPicture as(String alias) {
        return new AdPicture(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdPicture as(Name alias) {
        return new AdPicture(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdPicture rename(String name) {
        return new AdPicture(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdPicture rename(Name name) {
        return new AdPicture(name, null);
    }
}
