package com.distribution.modules.account.dao

import com.distribution.modules.account.entity.MemberAccount
import org.apache.ibatis.annotations.Mapper
import org.apache.ibatis.annotations.Param

@Mapper
interface MemberAccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_account
     *
     * @mbg.generated
     */
    fun deleteByPrimaryKey(accountId: String): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_account
     *
     * @mbg.generated
     */
    @Throws(Exception::class)
    fun insert(record: MemberAccount): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_account
     *
     * @mbg.generated
     */
    @Throws(Exception::class)
    fun insertSelective(record: MemberAccount): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_account
     *
     * @mbg.generated
     */
    fun selectByPrimaryKey(accountId: String): MemberAccount?

    /**
     * 根据会员ID查询其账户信息
     *
     * @param memberId
     * @return
     */
    fun selectMemberAccount(memberId: String): MemberAccount?

    /**
     * 根据userId查询其账户信息
     *
     * @param userId
     * @return
     */
    fun selectMemberAccountByUserId(userId: String): MemberAccount?

    /**
     * 根据支付宝账户查询会员账户
     *
     * @param alipayAccount
     * @return
     */
    fun selectByAlipay(alipayAccount: String): MemberAccount?

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_account
     *
     * @mbg.generated
     */
    @Throws(Exception::class)
    fun updateByPrimaryKeySelective(record: MemberAccount): Int

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table member_account
     *
     * @mbg.generated
     */
    @Throws(Exception::class)
    fun updateByPrimaryKey(record: MemberAccount): Int

    @Throws(Exception::class)
    fun updateByUserName(@Param("name") name: String)

    fun selectByUserName(@Param("name") name: String): MemberAccount?

}