/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.Distribution;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.ProductDetailRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * 积分兑换产品列表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductDetail extends TableImpl<ProductDetailRecord> {

    private static final long serialVersionUID = 274615624;

    /**
     * The reference instance of <code>distribution.product_detail</code>
     */
    public static final ProductDetail PRODUCT_DETAIL = new ProductDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductDetailRecord> getRecordType() {
        return ProductDetailRecord.class;
    }

    /**
     * The column <code>distribution.product_detail.id</code>.
     */
    public final TableField<ProductDetailRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution.product_detail.prod_detail_name</code>. 产品名称
     */
    public final TableField<ProductDetailRecord, String> PROD_DETAIL_NAME = createField("prod_detail_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "产品名称");

    /**
     * The column <code>distribution.product_detail.prod_detail_buy_back</code>. 回购价
     */
    public final TableField<ProductDetailRecord, Integer> PROD_DETAIL_BUY_BACK = createField("prod_detail_buy_back", org.jooq.impl.SQLDataType.INTEGER, this, "回购价");

    /**
     * The column <code>distribution.product_detail.prod_type_id</code>. 产品类型关联ID
     */
    public final TableField<ProductDetailRecord, String> PROD_TYPE_ID = createField("prod_type_id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "产品类型关联ID");

    /**
     * The column <code>distribution.product_detail.prod_detail_value</code>. 产品积分数
     */
    public final TableField<ProductDetailRecord, Long> PROD_DETAIL_VALUE = createField("prod_detail_value", org.jooq.impl.SQLDataType.BIGINT, this, "产品积分数");

    /**
     * The column <code>distribution.product_detail.prod_detail_count</code>. 兑换次数
     */
    public final TableField<ProductDetailRecord, Integer> PROD_DETAIL_COUNT = createField("prod_detail_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "兑换次数");

    /**
     * Create a <code>distribution.product_detail</code> table reference
     */
    public ProductDetail() {
        this(DSL.name("product_detail"), null);
    }

    /**
     * Create an aliased <code>distribution.product_detail</code> table reference
     */
    public ProductDetail(String alias) {
        this(DSL.name(alias), PRODUCT_DETAIL);
    }

    /**
     * Create an aliased <code>distribution.product_detail</code> table reference
     */
    public ProductDetail(Name alias) {
        this(alias, PRODUCT_DETAIL);
    }

    private ProductDetail(Name alias, Table<ProductDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductDetail(Name alias, Table<ProductDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "积分兑换产品列表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Distribution.DISTRIBUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRODUCT_DETAIL_PRIMARY, Indexes.PRODUCT_DETAIL_PRODUCT_DETAIL_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductDetailRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductDetailRecord>>asList(Keys.KEY_PRODUCT_DETAIL_PRIMARY, Keys.KEY_PRODUCT_DETAIL_PRODUCT_DETAIL_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductDetail as(String alias) {
        return new ProductDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductDetail as(Name alias) {
        return new ProductDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductDetail rename(String name) {
        return new ProductDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductDetail rename(Name name) {
        return new ProductDetail(name, null);
    }
}
