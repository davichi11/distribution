/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.Distribution;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.CardInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 可办信用卡信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CardInfo extends TableImpl<CardInfoRecord> {

    private static final long serialVersionUID = -952740461;

    /**
     * The reference instance of <code>distribution.card_info</code>
     */
    public static final CardInfo CARD_INFO = new CardInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CardInfoRecord> getRecordType() {
        return CardInfoRecord.class;
    }

    /**
     * The column <code>distribution.card_info.id</code>.
     */
    public final TableField<CardInfoRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution.card_info.bank_num</code>. 银行代号
     */
    public final TableField<CardInfoRecord, String> BANK_NUM = createField("bank_num", org.jooq.impl.SQLDataType.VARCHAR(100), this, "银行代号");

    /**
     * The column <code>distribution.card_info.card_num</code>. 信用卡代号
     */
    public final TableField<CardInfoRecord, String> CARD_NUM = createField("card_num", org.jooq.impl.SQLDataType.VARCHAR(100), this, "信用卡代号");

    /**
     * The column <code>distribution.card_info.card_name</code>. 信用卡名称
     */
    public final TableField<CardInfoRecord, String> CARD_NAME = createField("card_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "信用卡名称");

    /**
     * The column <code>distribution.card_info.card_img</code>. 信用卡图片
     */
    public final TableField<CardInfoRecord, String> CARD_IMG = createField("card_img", org.jooq.impl.SQLDataType.VARCHAR(100), this, "信用卡图片");

    /**
     * The column <code>distribution.card_info.card_info</code>. 信用卡详情
     */
    public final TableField<CardInfoRecord, String> CARD_INFO_ = createField("card_info", org.jooq.impl.SQLDataType.VARCHAR(800), this, "信用卡详情");

    /**
     * The column <code>distribution.card_info.card_url</code>. 信用卡办理链接
     */
    public final TableField<CardInfoRecord, String> CARD_URL = createField("card_url", org.jooq.impl.SQLDataType.VARCHAR(500), this, "信用卡办理链接");

    /**
     * The column <code>distribution.card_info.update_time</code>.
     */
    public final TableField<CardInfoRecord, String> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>distribution.card_info.add_time</code>.
     */
    public final TableField<CardInfoRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>distribution.card_info.is_delete</code>.
     */
    public final TableField<CardInfoRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>distribution.card_info.rebate</code>. 信用卡返利
     */
    public final TableField<CardInfoRecord, Double> REBATE = createField("rebate", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "信用卡返利");

    /**
     * Create a <code>distribution.card_info</code> table reference
     */
    public CardInfo() {
        this(DSL.name("card_info"), null);
    }

    /**
     * Create an aliased <code>distribution.card_info</code> table reference
     */
    public CardInfo(String alias) {
        this(DSL.name(alias), CARD_INFO);
    }

    /**
     * Create an aliased <code>distribution.card_info</code> table reference
     */
    public CardInfo(Name alias) {
        this(alias, CARD_INFO);
    }

    private CardInfo(Name alias, Table<CardInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CardInfo(Name alias, Table<CardInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "可办信用卡信息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Distribution.DISTRIBUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CARD_INFO_CARD_INFO_ID_UINDEX, Indexes.CARD_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CardInfoRecord> getPrimaryKey() {
        return Keys.KEY_CARD_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CardInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CardInfoRecord>>asList(Keys.KEY_CARD_INFO_PRIMARY, Keys.KEY_CARD_INFO_CARD_INFO_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardInfo as(String alias) {
        return new CardInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CardInfo as(Name alias) {
        return new CardInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CardInfo rename(String name) {
        return new CardInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CardInfo rename(Name name) {
        return new CardInfo(name, null);
    }
}
