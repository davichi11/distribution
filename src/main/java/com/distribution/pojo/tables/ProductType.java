/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.Distribution;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.ProductTypeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 积分兑换产品类型表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductType extends TableImpl<ProductTypeRecord> {

    private static final long serialVersionUID = 2124865518;

    /**
     * The reference instance of <code>distribution.product_type</code>
     */
    public static final ProductType PRODUCT_TYPE = new ProductType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductTypeRecord> getRecordType() {
        return ProductTypeRecord.class;
    }

    /**
     * The column <code>distribution.product_type.id</code>.
     */
    public final TableField<ProductTypeRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution.product_type.prod_name</code>. 产品类型名称
     */
    public final TableField<ProductTypeRecord, String> PROD_NAME = createField("prod_name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "产品类型名称");

    /**
     * The column <code>distribution.product_type.prod_rate</code>. 结算周期
     */
    public final TableField<ProductTypeRecord, String> PROD_RATE = createField("prod_rate", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "结算周期");

    /**
     * The column <code>distribution.product_type.prod_remark</code>. 产品描述
     */
    public final TableField<ProductTypeRecord, String> PROD_REMARK = createField("prod_remark", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "产品描述");

    /**
     * The column <code>distribution.product_type.prod_img</code>. 图标
     */
    public final TableField<ProductTypeRecord, String> PROD_IMG = createField("prod_img", org.jooq.impl.SQLDataType.VARCHAR(1000), this, "图标");

    /**
     * The column <code>distribution.product_type.prod_type</code>. 提单类型 0:短信,1:图片
     */
    public final TableField<ProductTypeRecord, String> PROD_TYPE = createField("prod_type", org.jooq.impl.SQLDataType.CHAR(1).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.CHAR)), this, "提单类型 0:短信,1:图片");

    /**
     * Create a <code>distribution.product_type</code> table reference
     */
    public ProductType() {
        this(DSL.name("product_type"), null);
    }

    /**
     * Create an aliased <code>distribution.product_type</code> table reference
     */
    public ProductType(String alias) {
        this(DSL.name(alias), PRODUCT_TYPE);
    }

    /**
     * Create an aliased <code>distribution.product_type</code> table reference
     */
    public ProductType(Name alias) {
        this(alias, PRODUCT_TYPE);
    }

    private ProductType(Name alias, Table<ProductTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductType(Name alias, Table<ProductTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "积分兑换产品类型表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Distribution.DISTRIBUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRODUCT_TYPE_PRIMARY, Indexes.PRODUCT_TYPE_PRODUCT_TYPE_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductTypeRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductTypeRecord>>asList(Keys.KEY_PRODUCT_TYPE_PRIMARY, Keys.KEY_PRODUCT_TYPE_PRODUCT_TYPE_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductType as(String alias) {
        return new ProductType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductType as(Name alias) {
        return new ProductType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductType rename(String name) {
        return new ProductType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductType rename(Name name) {
        return new ProductType(name, null);
    }
}
