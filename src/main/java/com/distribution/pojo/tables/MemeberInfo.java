/*
 * This file is generated by jOOQ.
*/
package com.distribution.pojo.tables;


import com.distribution.pojo.Distribution;
import com.distribution.pojo.Indexes;
import com.distribution.pojo.Keys;
import com.distribution.pojo.tables.records.MemeberInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 会员信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemeberInfo extends TableImpl<MemeberInfoRecord> {

    private static final long serialVersionUID = -1861817150;

    /**
     * The reference instance of <code>distribution.memeber_info</code>
     */
    public static final MemeberInfo MEMEBER_INFO = new MemeberInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemeberInfoRecord> getRecordType() {
        return MemeberInfoRecord.class;
    }

    /**
     * The column <code>distribution.memeber_info.id</code>.
     */
    public final TableField<MemeberInfoRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>distribution.memeber_info.member_code</code>.
     */
    public final TableField<MemeberInfoRecord, String> MEMBER_CODE = createField("member_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>distribution.memeber_info.open_id</code>.
     */
    public final TableField<MemeberInfoRecord, String> OPEN_ID = createField("open_id", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>distribution.memeber_info.member_name</code>.
     */
    public final TableField<MemeberInfoRecord, String> MEMBER_NAME = createField("member_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>distribution.memeber_info.member_pwd</code>.
     */
    public final TableField<MemeberInfoRecord, String> MEMBER_PWD = createField("member_pwd", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>distribution.memeber_info.member_source</code>.
     */
    public final TableField<MemeberInfoRecord, String> MEMBER_SOURCE = createField("member_source", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>distribution.memeber_info.is_delete</code>.
     */
    public final TableField<MemeberInfoRecord, String> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>distribution.memeber_info.add_time</code>.
     */
    public final TableField<MemeberInfoRecord, String> ADD_TIME = createField("add_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>distribution.memeber_info.update_time</code>.
     */
    public final TableField<MemeberInfoRecord, String> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * Create a <code>distribution.memeber_info</code> table reference
     */
    public MemeberInfo() {
        this(DSL.name("memeber_info"), null);
    }

    /**
     * Create an aliased <code>distribution.memeber_info</code> table reference
     */
    public MemeberInfo(String alias) {
        this(DSL.name(alias), MEMEBER_INFO);
    }

    /**
     * Create an aliased <code>distribution.memeber_info</code> table reference
     */
    public MemeberInfo(Name alias) {
        this(alias, MEMEBER_INFO);
    }

    private MemeberInfo(Name alias, Table<MemeberInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private MemeberInfo(Name alias, Table<MemeberInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "会员信息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Distribution.DISTRIBUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MEMEBER_INFO_MEMEBER_INFO_ID_UINDEX, Indexes.MEMEBER_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemeberInfoRecord> getPrimaryKey() {
        return Keys.KEY_MEMEBER_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemeberInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<MemeberInfoRecord>>asList(Keys.KEY_MEMEBER_INFO_PRIMARY, Keys.KEY_MEMEBER_INFO_MEMEBER_INFO_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemeberInfo as(String alias) {
        return new MemeberInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MemeberInfo as(Name alias) {
        return new MemeberInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MemeberInfo rename(String name) {
        return new MemeberInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MemeberInfo rename(Name name) {
        return new MemeberInfo(name, null);
    }
}
