
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.distribution.common.utils.Result;
import lombok.extern.slf4j.Slf4j;
import org.apache.commons.collections.MapUtils;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Map;



/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${lowClassName}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    @RequiresPermissions("${pathName}:list")
    public Result list(@RequestParam Map<String, Object> params) {
        //查询列表数据
        PageInfo<${className}Entity> pageInfo = PageHelper.startPage(MapUtils.getInteger(params, "page"),
                MapUtils.getInteger(params, "limit")).doSelectPageInfo(() -> ${lowClassName}Service.queryList(params));
        return Result.ok().put("page", pageInfo);
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{${pk.lowAttrName}}")
    @RequiresPermissions("${pathName}:info")
    public Result info(@PathVariable("${pk.lowAttrName}") ${pk.attrType} ${pk.lowAttrName}) {
            ${className}Entity ${lowClassName} = ${className}Service.queryObject(${pk.lowAttrName});

        return Result.ok().put("${lowClassName}", ${lowClassName});
    }

    /**
     * 保存
     */
    @RequestMapping("/save")
    @RequiresPermissions("${pathName}:save")
    public Result save(@RequestBody ${className}Entity ${lowClassName}) {
        try {
                ${lowClassName}Service.save(${lowClassName});
        } catch (Exception e) {
            log.error("保存异常", e);
            Result.error("保存异常");
        }

        return Result.ok();
    }

    /**
     * 修改
     */
    @RequestMapping("/update")
    @RequiresPermissions("${pathName}:update")
    public Result update(@RequestBody ${className}Entity ${lowClassName}) {
        try {
                ${lowClassName}Service.update(${lowClassName});
        } catch (Exception e) {
            log.error("修改异常", e);
            Result.error("修改异常");
        }
        return Result.ok();
    }

    /**
     * 删除
     */
    @RequestMapping("/delete")
    @RequiresPermissions("${pathName}:delete")
    public Result delete(@RequestBody ${pk.attrType}[]${pk.lowAttrName}s) {
        try {
            if (${pk.lowAttrName}s.length == 1) {
                    ${lowClassName}Service.delete(${pk.lowAttrName}s[0]);
            } else {
                    ${lowClassName}Service.deleteBatch(${pk.lowAttrName}s);
            }
        } catch (Exception e) {
            log.error("删除异常", e);
            Result.error("删除异常");
        }
        return Result.ok();
    }

}
